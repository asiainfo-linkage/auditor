#pipeline name,configured in log4j.properties as auditor.config= auditor.client.properties
oci.auditor.com.ailk.oci.auditor.pipeline.config.service.name=hdfs-pipeline
oci.auditor.com.ailk.oci.auditor.pipeline.config.queue.full.policy=shutdown
oci.auditor.com.ailk.oci.auditor.pipeline.config.queue.size=256

#pipeline.OutTask
oci.auditor.com.ailk.oci.auditor.pipeline.config.out.batch.size =64
oci.auditor.com.ailk.oci.auditor.pipeline.config.out.batch.interval =300

#DuplicateFilter
com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.debug = true
com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.rule = package com.ailk.oci.auditor.plugin.audit.pipeline.processor.in.filter.field
import com.ailk.oci.auditor.protocol.event.pipeline.avro.*;
import com.ailk.oci.auditor.pipeline.processor.in.filter.DuplicateFilter.CandidateElement;
global com.ailk.oci.auditor.pipeline.processor.in.filter.DuplicateFilter filter
rule "Hdfs User filter"
 dialect "mvel"
 when
 c: CandidateElement(element#Event.event instanceof HdfsEvent,user:element#Event.user,localTime:element#Event.localTime,operation:element#Event.operation,src:element#Event.event#HdfsEvent.src)
 then
 filter.duplicateCheck(c,localTime,4000,[user,operation,src])
end

com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.window.size = 1024

#FieldFilter
com.ailk.oci.auditor.pipeline.processor.in.filter.field.rule =package com.ailk.oci.auditor.plugin.audit.pipeline.processor.in.filter.field 
import com.ailk.oci.auditor.protocol.event.pipeline.avro.*;
import com.ailk.oci.auditor.pipeline.processor.in.filter.FieldFilter.CandidateElement;
rule "Hdfs User filter"
 dialect "mvel"
 when
 c: CandidateElement( element#Event.user == "user1" )
 then
 c.setAction("DISCARD")
end

